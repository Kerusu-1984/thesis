@inproceedings {288689,
author = {Kenichi Yasukata and Hajime Tazaki and Pierre-Louis Aublin and Kenta Ishiguro},
title = {zpoline: a system call hook mechanism based on binary rewriting},
booktitle = {2023 USENIX Annual Technical Conference (USENIX ATC 23)},
year = {2023},
isbn = {978-1-939133-35-9},
address = {Boston, MA},
pages = {293--300},
url = {https://www.usenix.org/conference/atc23/presentation/yasukata},
publisher = {USENIX Association},
month = jul
}

@inproceedings{tatebe2022chfs,
  title={{CHFS: Parallel Consistent Hashing File System for Node-local Persistent Memory}},
  author={Tatebe, Osamu and Obata, Kazuki and Hiraga, Kohei and Ohtsuji, Hiroki},
  booktitle={International Conference on High Performance Computing in Asia-Pacific Region},
  pages={115--124},
  year={2022}
}

@INPROCEEDINGS{8514892,
  author={Vef, Marc-André and Moti, Nafiseh and Süß, Tim and Tocci, Tommaso and Nou, Ramon and Miranda, Alberto and Cortes, Toni and Brinkmann, André},
  booktitle={2018 IEEE International Conference on Cluster Computing (CLUSTER)}, 
  title={{GekkoFS - A Temporary Distributed File System for HPC Applications}}, 
  year={2018},
  volume={},
  number={},
  pages={319-324},
  keywords={Metadata;Systems operation;Libraries;Servers;Semantics;Throughput;Data structures;Distributed File Systems;HPC;Burst Buffers},
  doi={10.1109/CLUSTER.2018.00049}}

@INPROCEEDINGS{10177390,
  author={Brim, Michael J. and Moody, Adam T. and Lim, Seung-Hwan and Miller, Ross and Boehm, Swen and Stanavige, Cameron and Mohror, Kathryn M. and Oral, Sarp},
  booktitle={2023 IEEE International Parallel and Distributed Processing Symposium (IPDPS)}, 
  title={{UnifyFS}: A User-level Shared File System for Unified Access to Distributed Local Storage}, 
  year={2023},
  volume={},
  number={},
  pages={290-300},
  keywords={Performance evaluation;Distributed processing;Codes;File systems;High performance computing;Aggregates;Semantics;Distributed file systems;Parallel I/O;Parallel systems;Storage hierarchies;Storage devices},
  doi={10.1109/IPDPS54959.2023.00037}}

@misc{gotcha,
  author={LLNL},
  title={Gotcha},
  howpublished={\url{https://github.com/LLNL/GOTCHA}},
}

@misc{syscall-intercept,
  author={pmem},
  title={Syscall\_intercept},
  howpublished={\url{https://github.com/pmem/syscall_intercept}},
}

@misc{libsysio,
  author={hpc},
  title={Libsysio},
  howpublished={\url{https://github.com/hpc/lustre/tree/master/libsysio}},
}

@misc{ior,
  author={hpc},
  title={{IOR}},
  howpublished={\url{https://github.com/hpc/ior}},
}

@article{balmau2022characterizing,
  title={Characterizing I/O in machine learning with mlperf storage},
  author={Balmau, Oana},
  journal={ACM SIGMOD Record},
  volume={51},
  number={3},
  pages={47--48},
  year={2022},
  publisher={ACM New York, NY, USA}
}

@article{brinkmann2020ad,
  title={Ad hoc file systems for high-performance computing},
  author={Brinkmann, Andr{\'e} and Mohror, Kathryn and Yu, Weikuan and Carns, Philip and Cortes, Toni and Klasky, Scott A and Miranda, Alberto and Pfreundt, Franz-Josef and Ross, Robert B and Vef, Marc-Andr{\'e}},
  journal={Journal of Computer Science and Technology},
  volume={35},
  pages={4--26},
  year={2020},
  publisher={Springer}
}

@inproceedings{vangoor2017fuse,
  title={To FUSE or not to FUSE: Performance of User-Space file systems},
  author={Vangoor, Bharath Kumar Reddy and Tarasov, Vasily and Zadok, Erez},
  booktitle={15th USENIX Conference on File and Storage Technologies (FAST 17)},
  pages={59--72},
  year={2017}
}

@article{hoskins2006sshfs,
  title={{SSHFS}: super easy file access over {SSH}},
  author={Hoskins, Matthew E},
  journal={Linux Journal},
  volume={2006},
  number={146},
  pages={4},
  year={2006},
  publisher={Belltown Media Houston, TX}
}

@article{davies2013scale,
  title={Scale out with {GlusterFS}},
  author={Davies, Alex and Orsaria, Alessandro},
  journal={Linux Journal},
  volume={2013},
  number={235},
  pages={1},
  year={2013},
  publisher={Belltown Media Houston, TX}
}

@inproceedings{rodeh2003zfs,
  title={{zFS}-a scalable distributed file system using object disks},
  author={Rodeh, Ohad and Teperman, Avi},
  booktitle={20th IEEE/11th NASA Goddard Conference on Mass Storage Systems and Technologies, 2003.(MSST 2003). Proceedings.},
  pages={207--218},
  year={2003},
  organization={IEEE}
}

@inproceedings{zhu2018direct,
  title={{Direct-FUSE: Removing the Middleman for High-Performance FUSE File System Support}},
  author={Zhu, Yue and Wang, Teng and Mohror, Kathryn and Moody, Adam and Sato, Kento and Khan, Muhib and Yu, Weikuan},
  booktitle={Proceedings of the 8th International Workshop on Runtime and Operating Systems for Supercomputers},
  pages={1--8},
  year={2018}
}

@inproceedings {294791,
author = {Kyu-Jin Cho and Jaewon Choi and Hyungjoon Kwon and Jin-Soo Kim},
title = {{RFUSE}: Modernizing Userspace Filesystem Framework through Scalable {Kernel-Userspace} Communication},
booktitle = {22nd USENIX Conference on File and Storage Technologies (FAST 24)},
year = {2024},
isbn = {978-1-939133-38-0},
address = {Santa Clara, CA},
pages = {141--157},
url = {https://www.usenix.org/conference/fast24/presentation/cho},
publisher = {USENIX Association},
month = feb
}

@misc{mlperfstorage,
  author={mlcommons},
  title={{MLPerf} Storage Benchmark Suite},
  howpublished={\url{https://github.com/mlcommons/storage}},
}

@inproceedings {190583,
author = {Vasily Tarasov and Abhishek Gupta and Kumar Sourav and Sagar Trehan and Erez Zadok},
title = {Terra Incognita: On the Practicality of {User-Space} File Systems},
booktitle = {7th USENIX Workshop on Hot Topics in Storage and File Systems (HotStorage 15)},
year = {2015},
address = {Santa Clara, CA},
url = {https://www.usenix.org/conference/hotstorage15/workshop-program/presentation/tarasov},
publisher = {USENIX Association},
month = jul
}

@article{3494556,
author = {Lembke, James and Roman, Pierre-Louis and Eugster, Patrick},
title = {{DEFUSE}: An Interface for Fast and Correct User Space File System Access},
year = {2022},
issue_date = {August 2022},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {18},
number = {3},
issn = {1553-3077},
url = {https://doi.org/10.1145/3494556},
doi = {10.1145/3494556},
abstract = {Traditionally, the only option for developers was to implement file systems (FSs) via drivers within the operating system kernel. However, there exists a growing number of file systems (FSs), notably distributed FSs for the cloud, whose interfaces are implemented solely in user space to (i) isolate FS logic, (ii) take advantage of user space libraries, and/or (iii) for rapid FS prototyping. Common interfaces for implementing FSs in user space exist, but they do not guarantee POSIX compliance in all cases, or suffer from considerable performance penalties due to high amounts of wait context switchs between kernel and user space processes.We propose DEFUSE: an interface for user space FSs that provides fast accesses while ensuring access correctness and requiring no modifications to applications. DEFUSE: achieves significant performance improvements over existing user space FS interfaces thanks to its novel design that drastically reduces the number of wait context switchs for FS accesses. Additionally, to ensure access correctness, DEFUSE: maintains POSIX compliance for FS accesses thanks to three novel concepts of bypassed file descriptor (FD) lookup, FD stashing, and user space paging. Our evaluation spanning a variety of workloads shows that by reducing the number of wait context switchs per workload from as many as 16,000 or 41,000 with filesystem in user space down to 9 on average, DEFUSE: increases performance 2\texttimes{} over existing interfaces for typical workloads and by as many as 10\texttimes{} in certain instances.},
journal = {ACM Trans. Storage},
month = sep,
articleno = {22},
numpages = {29},
keywords = {Linux kernel, FUSE, user-space file systems}
}

@inproceedings{3495883,
author = {Brown, Tom B. and Mann, Benjamin and Ryder, Nick and Subbiah, Melanie and Kaplan, Jared and Dhariwal, Prafulla and Neelakantan, Arvind and Shyam, Pranav and Sastry, Girish and Askell, Amanda and Agarwal, Sandhini and Herbert-Voss, Ariel and Krueger, Gretchen and Henighan, Tom and Child, Rewon and Ramesh, Aditya and Ziegler, Daniel M. and Wu, Jeffrey and Winter, Clemens and Hesse, Christopher and Chen, Mark and Sigler, Eric and Litwin, Mateusz and Gray, Scott and Chess, Benjamin and Clark, Jack and Berner, Christopher and McCandlish, Sam and Radford, Alec and Sutskever, Ilya and Amodei, Dario},
title = {Language models are few-shot learners},
year = {2020},
isbn = {9781713829546},
publisher = {Curran Associates Inc.},
address = {Red Hook, NY, USA},
abstract = {We demonstrate that scaling up language models greatly improves task-agnostic, few-shot performance, sometimes even becoming competitive with prior state-of-the-art fine-tuning approaches. Specifically, we train GPT-3, an autoregressive language model with 175 billion parameters, 10x more than any previous non-sparse language model, and test its performance in the few-shot setting. For all tasks, GPT-3 is applied without any gradient updates or fine-tuning, with tasks and few-shot demonstrations specified purely via text interaction with the model. GPT-3 achieves strong performance on many NLP datasets, including translation, question-answering, and cloze tasks. We also identify some datasets where GPT-3's few-shot learning still struggles, as well as some datasets where GPT-3 faces methodological issues related to training on large web corpora.},
booktitle = {Proceedings of the 34th International Conference on Neural Information Processing Systems},
articleno = {159},
numpages = {25},
location = {Vancouver, BC, Canada},
series = {NIPS '20}
}

@article{3149376,
author = {Vef, Marc-Andr\'{e} and Tarasov, Vasily and Hildebrand, Dean and Brinkmann, Andr\'{e}},
title = {Challenges and Solutions for Tracing Storage Systems: A Case Study with Spectrum Scale},
year = {2018},
issue_date = {May 2018},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {14},
number = {2},
issn = {1553-3077},
url = {https://doi.org/10.1145/3149376},
doi = {10.1145/3149376},
abstract = {IBM Spectrum Scale’s parallel file system General Parallel File System (GPFS) has a 20-year development history with over 100 contributing developers. Its ability to support strict POSIX semantics across more than 10K clients leads to a complex design with intricate interactions between the cluster nodes. Tracing has proven to be a vital tool to understand the behavior and the anomalies of such a complex software product. However, the necessary trace information is often buried in hundreds of gigabytes of by-product trace records. Further, the overhead of tracing can significantly impact running applications and file system performance, limiting the use of tracing in a production system.In this research article, we discuss the evolution of the mature and highly scalable GPFS tracing tool and present the exploratory study of GPFS’ new tracing interface, FlexTrace, which allows developers and users to accurately specify what to trace for the problem they are trying to solve. We evaluate our methodology and prototype, demonstrating that the proposed approach has negligible overhead, even under intensive I/O workloads and with low-latency storage devices.},
journal = {ACM Trans. Storage},
month = apr,
articleno = {18},
numpages = {24},
keywords = {GPFS, Parallel file system, performance, trace analysis}
}

@inproceedings {270722,
author = {Frank Schmuck and Roger Haskin},
title = {{GPFS}: A {Shared-Disk} File System for Large Computing Clusters},
booktitle = {Conference on File and Storage Technologies (FAST 02)},
year = {2002},
address = {Monterey, CA},
url = {https://www.usenix.org/conference/fast-02/gpfs-shared-disk-file-system-large-computing-clusters},
publisher = {USENIX Association},
month = jan
}